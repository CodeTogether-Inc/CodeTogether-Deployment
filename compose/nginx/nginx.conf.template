events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    server {
        listen       443 ssl http2;
        server_name  ${COLLAB_FQDN};
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        ssl_certificate /etc/nginx/ssl/${SSL_COLLAB_CERT};
        ssl_certificate_key /etc/nginx/ssl/${SSL_COLLAB_KEY};
        ssl_dhparam /etc/nginx/ssl/${DHPARAM_PEM};
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1.2;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        location / {
            # Similar proxy logic for headers
            set $realIP $remote_addr;
            set $forwardTo $proxy_add_x_forwarded_for;
            set $reqHost $http_host;
            if ($http_x_real_ip != '') {
                set $realIP $http_x_real_ip;
            }
            if ($http_x_forwarded_for != '') {
                set $forwardTo $http_x_forwarded_for;
            }
            add_header C-Real-IP $realIP;
            add_header C-Forwarded-For $forwardTo;
            add_header C-Request-Host $reqHost;
            proxy_set_header X-Real-IP $realIP;
            proxy_set_header X-Forwarded-For $forwardTo;
            proxy_set_header Host $reqHost;
            proxy_set_header X-NginX-Proxy true;
            proxy_http_version 1.1;
            proxy_redirect off;
            proxy_pass http://codetogether-collab:1080;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 360;
            proxy_connect_timeout 360;
            proxy_send_timeout 360;
        }
    }
    server {
        server_name          ${INTEL_FQDN};
        listen               443 ssl http2;

        # configure proxy buffer sizes
        proxy_buffer_size    128k;
        proxy_buffers        4 256k;

        # setup the SSL certificate
        ssl_certificate /etc/nginx/ssl/${SSL_INTEL_CERT};
        ssl_certificate_key /etc/nginx/ssl/${SSL_INTEL_KEY};
        ssl_dhparam /etc/nginx/ssl/${DHPARAM_PEM};
        ssl_prefer_server_ciphers on;
        ssl_protocols        TLSv1.2;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

        # create the passthrough to the CodeTogether Intel container
        location / {

            # set passthru parameters for the CodeTogether Intel container
            set $realIP      $remote_addr;
            set $forwardTo   $proxy_add_x_forwarded_for;
            set $reqHost     $http_host;
            client_max_body_size 32M;
            if ($http_x_real_ip != '') {
                set $realIP  $http_x_real_ip;
            }
            if ($http_x_forwarded_for != '') {
                set $forwardTo $http_x_forwarded_for;
            }
            proxy_set_header X-Real-IP $realIP;
            proxy_set_header X-Forwarded-For $forwardTo;
            proxy_set_header Host $reqHost;

            # setup the backend to service the HQ requests
            proxy_pass            http://codetogether-intel:1080;
            proxy_set_header      X-NginX-Proxy true;
            proxy_http_version    1.1;
            proxy_redirect        off;
            proxy_set_header      Upgrade $http_upgrade;
            proxy_set_header      Connection "upgrade";
            proxy_read_timeout    360;
            proxy_connect_timeout 360;
            proxy_send_timeout    360;
        }
    }
}