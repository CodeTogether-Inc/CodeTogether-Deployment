# Default values for CodeTogether Live.
# This is a YAML-formatted file.
#
# Kubernetes required version: v1.18+
#
# Example 'values.yaml' file for running CodeTogether On-Premises.
# Use this file as a template to create your own 'codetogether-values.yaml' file.
# For full detail on the chart's prerequisites, settings and configuration, please refer to our official Helm repository at:
#   https://artifacthub.io/packages/helm/codetogether/codetogether
nameOverride: ""
fullnameOverride: ""

image:
  repository: hub.edge.codetogether.com/releases/codetogether-collab
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"
  # Optional - set to override the image tag, e.g. "sha256:1234567890"
  digest: ""

#
# Configure the source location for the Docker image, using the
# credentials provided by your CodeTogether Sales Representative.
#
imageCredentials:
  # pullSecret: "my-customer-pull-secret"
  # Use pullSecret or configure credentials if using private Docker registry.
  enabled: false
  registry: hub.edge.codetogether.com
  username: "my-customer-username"
  password: "my-customer-password"
  email: unused

#
# Set this to 'true' if you are deploying CodeTogether in OpenShift.
#
openshift:
  enabled: false

# Optional: use an existing secret for Intel connection
intelsecret:
  enabled: false              # default OFF - chart-managed secret
  ref: ""                     # name of existing Secret (must have keys: url, secret)

#
# Values required for establishing connection with the Intel server.
#
intel:
  # URL of the Intel server
  url: "https://your-intel-server"
  # Same secret value as the hq.collab.secret property in the cthq.properties file
  # configured for the Intel server.
  secret: "SECRET"

#
# Set CodeTogether runing mode and server's FQDN (HTTPS is mandatory for CodeTogether)
# Use 'direct' for simple evaluations and small deployments. CodeTogether can provide
# guidance on the best deployment option based on your needs.
#
codetogether:
  # Supported values:
  # 'direct' - runs a single self-contained CodeTogether backend
  # 'locator-central' - runs a locator instance of CodeTogether with 1 or more edge servers
  # 'locator-edge' - runs an edge server instance connecting to a locator
  mode: "direct"
  # The FQDN and URL for how this server will be known by clients on the network
  url: https://codetogether.local
  # HTTPS is required. If your cert is not a fully-rooted (trusted cert), set
  # to true to allow more tolerance from clients
  trustAllCerts: "true"
  # Optionally do not expose /clients endpoint by setting to 'true'
  noclients: "false"
  # Set a customized TZ for CodeTogether container (default is UTC)
  # https://nodatime.org/TimeZones
  timeZone:
    enabled: false
    region: "America/Chicago"

#
# Configure if CodeTogether is running in 'direct' mode.
#
direct: 
  # When running in 'direct' mode, integration with StatsD or Prometheus can be
  # enabled in the Docker file. For Locator deployments, configure dynamically
  # on the locator's Dashboard.
  metrics:
    statsdEnabled: false
    statsdHost: "https://my-graphite-fqdn"
    statsdPort: "8125"
    statsdProtocol: "UDP"
    prometheusEnabled: false

#
# Configure if CodeTogether is running in 'locator-central' mode.
#
locatorCentral:
  # maxmindLicenseKey: "my-maxmind-license-key"
  # maxmindAccountId: "my-maxmind-account-id"
  # A database is required for the central locator.
  database:
    host: "10.10.0.2"
    port: 3306
    schema: "codetogether"
    # Supported values: 'mysql' or 'postgres'
    dialect: "mysql"  
    user: "my-db-username"
    password: "my-db-password"
    # Optionally enable SSL security to database
    sslEnabled: false
    # sslKeys: false
    # sslMode: "required"
    # rejectUnauthorized: false
    # To get expected values, use `base64 <filename>` command, e.g. if the CA certificate file
    # is ca.crt, then execute `base64 ca.crt` command and use the output as the sslCA value.
    # sslKey: "my-db-ssl-key-base64-encoded"
    # sslCA: "my-db-ssl-certificate-authority-base64-encoded"
    # sslCert: "my-db-ssl-certificate-base64-encoded"
    
#
# Configure if CodeTogether is running in 'locator-edge' mode.
#
locatorEdge:
  # URL that the Locator is listening on.
  locator: "https://codetogether.locator"
  # Internal k8s url for the locator service.
  # Optional - If not set k8s dns need to know how to resolve the locator url.
  # locatorLan: "http://<collab-locator-service-name>.<namespace>.svc.cluster.local:443"
  # Optional region which can have CIDR IP address regions assigned to 
  # allowing regional routing of requests. Only enable if deploying
  # CodeTogether to multiple regional data centers.
  region: "default"

#
# Enables and configures Ingress (default = Nginx). The className value can be used
# to change the default behavior. Please read the comments below to see details.
#
ingress:
  enabled: true
  annotations:
    # For reference: This is required for k8 version < 1.18
    # kubernetes.io/ingress.class: nginx
  # There are 3 ways to handle ingressClassName for the CodeTogether Ingress object:
  # (1) set className to 'codetogether-nginx' to use the predefined IngressClass
  # (2) set className to a custom value to use your own IngressClass
  # (3) do not specify className to rely on the default IngressClass for the cluster (default)
  # className: codetogether-nginx
  # Enable to attack the CVE'S described
  # config:
    # max_ranges: "1"  # Limits the number of byte ranges allowed in a request, mitigating excessive range attacks.
    # ssl_protocols: "TLSv1.2 TLSv1.3"  # Defines the allowed SSL/TLS protocols, restricting to secure versions (TLS 1.2 and 1.3).
    # ssl_ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"  # Specifies the allowed ciphers for secure connections.
    # ssl_prefer_server_ciphers: "on"  # Ensures the server prefers its own ciphers over the clientâ€™s.
    # ssl_session_cache: "shared:SSL:10m"  # Enables SSL session caching, improving TLS performance.
    # ssl_session_timeout: "10m"  # Specifies the timeout duration for SSL sessions.
    # gzip: "off"  # Disables gzip compression, which can prevent certain vulnerabilities like the BREACH attack.
    # add-headers: |
      # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;  # Enforces strict HTTPS for a long duration.
      # add_header X-Content-Type-Options "nosniff" always;  # Prevents browsers from MIME-type sniffing to enhance security.
      # add_header X-Frame-Options "DENY" always;  # Disallows the site from being framed, preventing clickjacking attacks.
      # add_header X-Powered-By "";  # Removes the "X-Powered-By" header to obfuscate the server technology.
      # add_header X-Frame-Options "SAMEORIGIN" always;  # Allows framing only from the same origin to enhance protection.
      # add_header X-XSS-Protection "1; mode=block" always;  # Enables XSS protection and blocks malicious scripts.
  tls:
    - secretName: codetogether-tls
#
# CodeTogether has a dashboard to view metrics, and for the locator, update
# configuration on the fly. If a custom username and password is not enabled,
# one will be dynamically generated and shared in the log when the server 
# starts up. Accessed at https://url/dashboard.
#
dashboard:
  # Set to true to configure with the user and password below
  enabled: false
  username: "my-dashboard-username"
  password: "my-dashboard-password"
  # Name of existing secret to use for Dashboard credentials. If specfied,
  # then dashboard.username and dashboard.password will be ignored and picked up from this secret.
  # existingSecret: ""

#
# Optionally enable CodeTogether A/V support. Available for 'direct' and
# 'locator-edge' containers.
#
av:
  enabled: false
  # If auto, will attempt lookup of the IP address of the server. If the 
  # container fails to start, IP address can be manually configured.
  serverIP: "auto"
  # Optional - If you want to use your own STUN servers, set this to 'true'
  # and specify <server:port> separated by a comma ','.
  stunServers: 
    enabled: false
    server: "coturn.example.com"
    secret: "my-secret"
  # Optional - Jitsi Settings for locator edge servers with locator or extenral jitsi meet server
  # jitsiUrl: "https://your.jtsi.server"

#
# The following sections provide default configurations for the
# container and normally do not need to be modified.
# -------------------------------------------------------------------------
#
service:
  type: ClusterIP
  port: 443

serviceAccount:
  create: true
  annotations: {}
  name: "codetogether-collab"

podAnnotations: {}

# Enable if deploying in OpenShift
openshift:
  enabled: false

securityContext: {} #defaults
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true # enable for read-only setup
  # runAsNonRoot: true
  # runAsUser: 1000 # Use '0' for root user, in vanilla k8s you can use any non-root uid
  # runAsGroup: 1000
  # In openshift, dont set runAsUser or runAsGroup, let OpenShift assign the values

podSecurityContext: {}
# In OpenShift will inject automatically
  #fsGroup: 1000
  #fsGroupChangePolicy: "OnRootMismatch"

readinessProbe:
  initialDelaySeconds: 60
  periodSeconds: 60
  timeoutSeconds: 15
  successThreshold: 1
  failureThreshold: 1

livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 60
  timeoutSeconds: 15
  successThreshold: 1
  failureThreshold: 1

nodeSelector: {}

tolerations: []

affinity: {}

# @since 2022.2.1-1350
proxy:
  enabled: false
  # Proxy URI format, omit credentials if unauthenticated:
  # http://myuser:mypassword@myproxyhost.com:port
  # Note: At this point only HTTP proxy is supported. Additionally, 
  # if you are using special characters in the password, please verify escaping.
  uri: ""
  # Name of existing secret to use for proxy URI. If specified,
  # then proxy.uri will be ignored and picked up from this secret.
  # existingSecret: ""

#
# Configures a periodic restart of the CodeTogether server in the running container.
#
# @since 2022.2.2-1381
#
restart:
  enabled: true
  # by default restart is scheduled on every Sunday 11 AM
  cronPattern: "* 11 * * 0"

#
# Configures the CodeTogether server to use a custom favicon.
favicon:
  enabled: false
  filePath: files/new-favicon.ico
